up<-numeric()
Sqc<-numeric(length=4)
Sqr<-numeric(length=4)
SNC<-numeric(length=4)
SNC75<-numeric(length=4)
Sq<-numeric(length=4)
pre<-numeric()
pre1<-numeric()
pre2<-numeric()
i<-numeric()
thet<-numeric()
eqrt<-numeric()
eqt<-numeric()
# match initial conditions
Sqr[1]=Eqr[1]
Sq[1]=Eq[1]
# some functions to get the simulated variables
f<-function(x,the,k,pr) {
-Eq[k]+(((Eqr[k]/x)^(1/the))/((Eqr[k]/x)^(1/the)+pr))*Eqr[k]+
(1-(((Eqr[k]/x)^(1/the))/((Eqr[k]/x)^(1/the)+pr)))*x}
fm<-function(x,the,k,pr,eqt,eqrt) {
-eqt+(((eqrt/x)^(1/the))/((eqrt/x)^(1/the)+pr))*eqrt+
(1-(((eqrt/x)^(1/the))/((eqrt/x)^(1/the)+pr)))*x}
zt<-function(beta,pe,t,up,thet) {
# get z0 first
v=uniroot(f,c(0.00001,up),tol=0.00000001,maxiter=10000,the=thet,k=1,pr=pe)
z0=(Eqr[1]/v$root)^(1/thet)
if(t>=2){pe/(1-beta)*(z0*(1-beta)/pe)^(2^(t-1))}else{z0}}
mt<-function(beta,pr,t,up,thet) zt(beta,pr,t,up,thet)/(pr+zt(beta,pr,t,up,thet))
mbetat<-function(beta,pr,t,up,thet) beta*mt(beta,pr,t,up,thet)
qrs<-function(beta,pe,t,up,mu,pre,thet) gamma(1-thet)*(mu*((1-beta)*(pre/gamma(1-thet))^(1/thet)*
(mt(beta,pe,t-1,up,thet))))^thet
qcs<-function(beta,pe,t,up,mu,pre,thet) gamma(1-thet)*((mu*((pre/gamma(1-thet))^(1/thet)*
(1-mt(beta,pe,t-1,up,thet)))))^thet
qs<-function(beta,pe,t,up,mu,pre1,pre2,thet) qrs(beta,pe,t,up,mu,pre1,thet)*mt(beta,pe,t,up,thet)+
(1-mt(beta,pe,t,up,thet))*qcs(beta,pe,t,up,mu,pre2,thet)
nc<-function(beta,pe,t,up,mu,pre1,pre2,thet) qrs(beta,pe,t,up,mu,pre1,thet)*
(((1-beta)*mt(beta,pe,t,up,thet))/(1-beta*mt(beta,pe,t,up,thet)))+
((1-mt(beta,pe,t,up,thet))/(1-beta*mt(beta,pe,t,up,thet)))*
qcs(beta,pe,t,up,mu,pre2,thet)
#GUARDA A INITIAL CONDITION CIU C
# define the function that we want to minimize taking beta
maxg<-1000
max<-numeric()
maxx<-numeric()
muu<-numeric()
betaa<-numeric()
sum<-numeric(length=1)
MT<-numeric()
MR<-numeric()
MT75<-numeric()
MR75<-numeric()
upper<-seq(0.01,200,length.out=maxg)
#parameters for the simulation
n<-250 #how many draws from distribution
B=numeric(length=n)
B1=numeric(length=n)
Bc=numeric(length=n)
Br=numeric(length=n)
B1=runif(n, min = 0, max = 1)  # shocks for deciding later from which distribution to draw
mini<-function(betaa,pe,muu,thet){
sum=0
# first check that I can find a Kc that rationalize data with
# current parameter
for(j in maxg:1){
if(f(0.00001,thet,1,pe)*f(upper[j],thet,1,pe)<0){
maxx=upper[j]
break}
maxx=400}
# compute tha loss function
if(f(0.00001,thet,1,pe)*f(maxx,thet,1,pe)>0){return(10000)}
# get Sqc[1],Eqc[1] consistent with parameters
v=uniroot(f,c(0.00001,maxx),tol=0.00000001,maxiter=10000,the=thet,k=1,pr=pe)
Eqc[1]<-v$root
for(i in 1:4){
if(i>=2){
Sqc[i]<-qcs(betaa,pe,i,maxx,muu,Sqc[i-1],thet)
Sqr[i]<-qrs(betaa,pe,i,maxx,muu,Sqr[i-1],thet)
Sq[i] <-qs(betaa,pe,i,maxx,muu,Sqr[i-1],Sqc[i-1],thet)
SNC[i]<-nc(betaa,pe,i,maxx,muu,Sqr[i-1],Sqc[i-1],thet)
}else{
Eqc[1]<-v$root
Sqc[1]<-Eqc[1]
Sqr[1]<-Eqr[1]
SNC[1]<-Eqr[1]*
(((1-betaa)*mt(betaa,pe,1,maxx,thet))/(1-betaa*mt(betaa,pe,1,maxx,thet)))+
((1-mt(betaa,pe,1,maxx,thet))/(1-betaa*mt(betaa,pe,1,maxx,thet)))*
Eqc[1]}
#Median & 75 percentile
MT[1]<-(((Sq[1]/(gamma(1-thet)))^(1/1))/
((log(2))^thet))
MR[1]<-(((Sqr[1]/(gamma(1-thet)))^(1/1))/
((log(2))^thet))
MT75[1]<-(((Sq[1]/(gamma(1-thet)))^(1/1))/
((log(4/3))^thet))
MR75[1]<-(((Sqr[1]/(gamma(1-thet)))^(1/1))/
((log(4/3))^thet))
#Ingore above: set the first period to match medians instead
Sqr[1]= ((log(2))^thet)*gamma(1-thet)*EqrM[1]
Sq[1]= ((log(2))^thet)*gamma(1-thet)*EqM[1]
# sum=sum+((MT-EqM[1])/EqM[1])^2
#  sum=sum+((MR-EqrM[1])/EqrM[1])^2
}
for (i in 1:4){
mcur<-mt(betaa,pe,i,maxx,thet)
sum=sum+((mcur*betaa-Embeta[i])/Embeta[i])^2
if(i>=2){
#Moments with average
# sum=sum+((qrs(betaa,pe,i,maxx,muu,Sqr[i-1])-Eqr[i])/Eqr[i])^2
#   sum=sum+((qs(betaa,pe,i,maxx,muu,Sqr[i-1],Sqc[i-1],thet)-Eq[i])/Eq[i])^2
#   sum=sum+((nc(betaa,pe,i,maxx,muu,Sqr[i-1],Sqc[i-1],thet)-ENC[i])/ENC[i])^2
#Moments with median (scale=k^theta;shape=1/theta
#median=scale/(ln(2))^(1/shape)
MT[i]<-(((qs(betaa,pe,i,maxx,muu,Sqr[i-1],Sqc[i-1],thet)/(gamma(1-thet)))^(1/1))/
((log(2))^thet))
MR[i]<-(((qrs(betaa,pe,i,maxx,muu,Sqr[i-1],thet)/(gamma(1-thet)))^(1/1))/
((log(2))^thet))
MT75[i]<-(((qs(betaa,pe,i,maxx,muu,Sqr[i-1],Sqc[i-1],thet)/(gamma(1-thet)))^(1/1))/
((log(4/3))^thet))
MR75[i]<-(((qrs(betaa,pe,i,maxx,muu,Sqr[i-1],thet)/(gamma(1-thet)))^(1/1))/
((log(4/3))^thet))
#here simulate to get the median of non censored distribution
# draw random realization from the two frechet distibutions
Br=rfrechet(n, loc=0,
scale=(qrs(betaa,pe,i,maxx,muu,Sqr[i-1],thet)/(gamma(1-thet))),
shape=1/thet)
Bc=rfrechet(n, loc=0,
scale=qcs(betaa,pe,i,maxx,muu,Sqc[i-1],thet)/(gamma(1-thet)),
shape=1/thet)
for (j in 1:n) {if (B1[j]>mt(betaa,pe,i,maxx,thet)) {B[j]=Bc[j]} else {B[j]=Br[j]}}
SNC[i]=median(B)
SNC75[i]=quantile(B,0.75)
}else{
v=uniroot(fm,c(0.00001,maxx),tol=0.0001,maxiter=100,the=thet,k=1,pr=pe,eqt=Sq[1],eqrt=Sqr[1])
Sqc[1]=v$root
#here simulate to get the median of non censored distribution
# draw random realization from the two frechet distibutions
Br=rfrechet(n, loc=0,
scale=(Sqr[1]/(gamma(1-thet))),
shape=1/thet)
Bc=rfrechet(n, loc=0,
scale=Sqc[1]/(gamma(1-thet)),
shape=1/thet)
for (j in 1:n) {if (B1[j]>mt(betaa,pe,1,maxx,thet)) {B[j]=Bc[j]} else {B[j]=Br[j]}}
SNC[1]=median(B)
SNC75[1]=quantile(B,0.75)
}
sum=sum+((MT[i]-EqM[i])/EqM[i])^2
sum=sum+((MT75[i]-EqQ75[i])/EqQ75[i])^2
#  sum=sum+((MR-EqrM[i])/EqrM[i])^2
sum=sum+((SNC[i]-ENCM[i])/ENCM[i])^2
sum=sum+((SNC75[i]-ENCQ75[i])/ENCQ75[i])^2
}
# if(mt(betaa,pe,1,maxx,thet)<0.5){sum=10000}
return(sum)}
ff<-function(x) -mini(x[1],x[2],x[3],x[4])
# call the genetic alogorithm for the estimation
GA <- ga(type = "real-valued",
fitness = ff,
lower = c(0,0.1,0.1,0.05),
upper = c(1.0,750,15,0.45),
popSize = 50, maxiter = 80, run = 20,
pcrossover = 0.8,
pmutation = 0.6,
keepBest = TRUE,
optim=TRUE,
optimArgs = list(method = "L-BFGS-B",poptim = 0.2,pressel = 0.1,
control = list(fnscale = -1, maxit = 20)))
# visualize the solution
summary(GA)
plot(GA)
beta<-GA@solution[1,1]
p<-GA@solution[1,2]
mu<-GA@solution[1,3]
theta<-GA@solution[1,4]
print(mini(beta,p,mu,theta))
print(Sqc)
print(Sq)
# compute empirical and non empirical
Smbeta=numeric(length=4)
Sz=numeric(length=4)
Sm=numeric(length=4)
Ez=numeric(length=4)
Em=numeric(length=4)
SqrM<-numeric(length=4)
SNCM<-numeric(length=4)
SqM<-numeric(length=4)
SqrQ75<-numeric(length=4)
SNCQ75<-numeric(length=4)
SqQ75<-numeric(length=4)
for(j in maxg:1){
#  if(f(0.001,theta,1,p)*f(upper[j],theta,1,p)<0 & f(0.001,theta,2,p)*f(upper[j],theta,2,p)<0 &
# f(0.001,theta,3,p)*f(upper[j],theta,3,p)<0 & f(0.001,theta,4,p)*f(upper[j],theta,4,p)<0){
if(f(0.00001,theta,1,p)*f(upper[j],theta,1,p)<0){
max=upper[j]
break}}
for(i in 1:4){
Sm[i]=mt(beta,p,i,max,theta)
Sz[i]=zt(beta,p,i,max,theta)
Smbeta[i]=mbetat(beta,p,i,max,theta)
#v=uniroot(f,c(0.00001,max),tol=0.0001,maxiter=100,the=theta,k=i,pr=p)
#Eqc[i]=v$root
v=uniroot(f,c(0.00001,max),tol=0.0001,maxiter=100,the=theta,k=1,pr=p)
Eqc[1]=v$root
Ez[i]=(Eqr[i]/Eqc[i])^(1/theta)
Em[i]=Ez[i]/(p+Ez[i])
if(i>=2){
Sqc[i]=qcs(beta,p,i,max,mu,Sqc[i-1],theta)
Sqr[i]=qrs(beta,p,i,max,mu,Sqr[i-1],theta)
Sq[i]=qs(beta,p,i,max,mu,Sqr[i-1],Sqc[i-1],theta)
SNC[i]=nc(beta,p,i,max,mu,Sqr[i-1],Sqc[i-1],theta)
#median
SqM[i]=(((Sq[i]/(gamma(1-theta)))^(1/1))/
((log(2))^theta))
SqrM[i]=(((Sqr[i]/(gamma(1-theta)))^(1/1))/
((log(2))^theta))
SqQ75[i]=(((Sq[i]/(gamma(1-theta)))^(1/1))/
((log(4/3))^theta))
SqrQ75[i]=(((Sqr[i]/(gamma(1-theta)))^(1/1))/
((log(4/3))^theta))
# draw random realization from the two frechet distibutions
Br=rfrechet(n, loc=0,
scale=(qrs(beta,p,i,max,mu,Sqr[i-1],theta)/(gamma(1-theta))),
shape=1/theta)
Bc=rfrechet(n, loc=0,
scale=qcs(beta,p,i,max,mu,Sqc[i-1],theta)/(gamma(1-theta)),
shape=1/theta)
for (j in 1:n) {if (B1[j]>mt(beta,p,i,max,theta)) {B[j]=Bc[j]} else {B[j]=Br[j]}}
SNCM[i]=median(B)
SNCQ75[i]=quantile(B,0.75)
}else{
Sqr[1]= ((log(2))^theta)*gamma(1-theta)*EqrM[1]
Sq[1]= ((log(2))^theta)*gamma(1-theta)*EqM[1]
v=uniroot(fm,c(0.00001,max),tol=0.0001,maxiter=100,the=theta,k=1,pr=p,eqt=Sq[1],eqrt=Sqr[1])
Sqc[1]=v$root
SqQ75[1]=(((Sq[1]/(gamma(1-theta)))^(1/1))/
((log(4/3))^theta))
SqrQ75[1]=(((Sqr[1]/(gamma(1-theta)))^(1/1))/
((log(4/3))^theta))
SqM[1]=EqM[1]
SqrM[1]=EqrM[1]
SNC[1]=Sqr[1]*
(((1-beta)*mt(beta,p,i,max,theta))/(1-beta*mt(beta,p,i,max,theta)))+
((1-mt(beta,p,i,max,theta))/(1-beta*mt(beta,p,i,max,theta)))*
Sqc[1]
# draw random realization from the two frechet distibutions
Br=rfrechet(n, loc=0,
scale=Sqr[1]/(gamma(1-theta)),
shape=1/theta)
Bc=rfrechet(n, loc=0,
scale=Sqc[1]/gamma(1-theta),
shape=1/theta)
for (j in 1:n) {if (B1[j]>mt(beta,p,1,max,theta)) {B[j]=Bc[j]} else {B[j]=Br[j]}}
SNCM[1]=median(B)
SNCQ75[1]=quantile(B,0.75)
}
}
##################################
# get bootstraped CI for graph
##################################
ns<-length(members$perfl)
nboots<-100
boots<-numeric(ns)
Bmbeta<-array(,c(4,nboots))
Bq<-array(,c(4,nboots))
BNC<-array(,c(4,nboots))
Bqr<-array(,c(4,nboots))
rm(.Random.seed, envir=globalenv())
#aa<-replicate(nboots, sample(members, ns,replace=TRUE))
for(i in 1:nboots){
boots<-as.data.frame(sample(members$Persons_PKey,ns,replace=TRUE))
memb<-merge(boots,members,
by.x='sample(members$Persons_PKey, ns, replace = TRUE)',
by.y='Persons_PKey')
# compute what we need
#memb<-members[boots%in% members$Persons_PKey]
#memb<-subset(members,members$Persons_PKey==boots)
#We consider 4 periods here
members1 <- memb[memb$refdatel<threshold1,]
members2 <- memb[threshold2>memb$refdatel & memb$refdatel>=threshold1,]
members3 <- memb[threshold3>memb$refdatel & memb$refdatel>=threshold2,]
members4 <- memb[memb$refdatel>=threshold3,]
memberscensored1 <- memb[memb$Forbidden<9999 & memb$refdatel<threshold1,]
membersnotcensored1 <- memb[memb$Forbidden==9999 & memb$refdatel<threshold1,]
memberscensored2 <- memb[memb$Forbidden<9999 &
threshold2>memb$refdatel & memb$refdatel>=threshold1,]
membersnotcensored2 <- memb[memb$Forbidden==9999 &
threshold2>memb$refdatel & memb$refdatel>=threshold1,]
memberscensored3 <- memb[memb$Forbidden<9999 &
threshold3>memb$refdatel & memb$refdatel>=threshold2,]
membersnotcensored3 <- memb[memb$Forbidden==9999 &
threshold3>memb$refdatel & memb$refdatel>=threshold2,]
memberscensored4 <- memb[memb$Forbidden<9999 & memb$refdatel>=threshold3,]
membersnotcensored4 <- memb[memb$Forbidden==9999 & memb$refdatel>=threshold3,]
memberscensored <- memb[memb$Forbidden<9999 ,]
#the moments now
for(j in 1:4){
nam <- paste("members", j, sep = "")
namc <- paste("memberscensored", j, sep = "")
namnc <- paste("membersnotcensored", j, sep = "")
Bmbeta[j,i]<-length(get(namc)$perfl)/(length(get(namc)$perfl)+ length(get(namnc)$perfl))
Bqr[j,i]=mean(get(namc)$perfl)
Bq[j,i]=mean(get(nam)$perfl)
BNC[j,i]=mean(get(namnc)$perfl)}}
#get finally the CI
CImbeta<-array(,c(2,4))
CIq<-array(,c(2,4))
CIqr<-array(,c(2,4))
CINC<-array(,c(2,4))
for(j in 1:4){
CImbeta[,j]<-quantile(Bmbeta[j,],c(0.025,0.975))
CIq[,j]<-quantile(Bq[j,],c(0.025,0.975))
CIqr[,j]<-quantile(Bqr[j,],c(0.025,0.975))
CINC[,j]<-quantile(BNC[j,],c(0.025,0.975))}
#################################
# graph to visualize the reults
#################################
setwd("C:\\Users\\blasutto\\Dropbox\\Roman_Church_censorship_growth\\calibration")
# function for more than one title per graph
line2user <- function(line, side) {
lh <- par('cin')[2] * par('cex') * par('lheight')
x_off <- diff(grconvertX(0:1, 'inches', 'user'))
y_off <- diff(grconvertY(0:1, 'inches', 'user'))
switch(side,
`1` = par('usr')[3] - line * y_off * lh,
`2` = par('usr')[1] - line * x_off * lh,
`3` = par('usr')[4] + line * y_off * lh,
`4` = par('usr')[2] + line * x_off * lh,
stop("side must be 1, 2, 3, or 4", call.=FALSE))
}
# set up something about the graph
time=seq(1,4,1)
timee=c(paste(threshold0,'-',threshold1),
paste(threshold1,'-',threshold2),
paste(threshold2,'-',threshold3),
paste(threshold3,'-',threshold4))
pc <- c("grey40","red","grey83")
pdf(file="fit.pdf", width = 10, height = 10)
par(mfrow=c(4,2),oma = c(3, 1, 1, 1),
mgp=c(2,0.3,0)) # all plots on one page
#q
xrange <- range(time)
yrange <- c(0,min(max(EqM,SqM),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q_t(50p)$'),cex.lab=1.6,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
#polygon(c(time,rev(time)),c(CIq[1,],rev(CIq[2,])),col =pc[3], border = FALSE,axes=F)
lines(time,EqM,type="l",col=pc[1],lwd=3)
lines(time,SqM,type="l",col=pc[2],lty=2,lwd=3)
#q
xrange <- range(time)
yrange <- c(0,min(max(EqQ75,SqQ75),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q_t(75p)$'),cex.lab=1.6,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
#polygon(c(time,rev(time)),c(CIq[1,],rev(CIq[2,])),col =pc[3], border = FALSE,axes=F)
lines(time,EqQ75,type="l",col=pc[1],lwd=3)
lines(time,SqQ75,type="l",col=pc[2],lty=2,lwd=3)
#First Title
text(line2user(line=mean(par('mar')[c(2, 4)]), side=2),
line2user(line=2, side=3), 'Targeted Moments', xpd=NA, cex=2, font=2)
#nc
yrange <- c(0,min(max(ENCM,SNCM),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q_t$(not censored,50p)'),cex.lab=1.6,xaxt='n' )
axis(1, at=1:4,labels=timee,font=2)
# polygon(c(time,rev(time)),c(CINC[1,],rev(CINC[2,])),col =pc[3], border = FALSE)
lines(time,ENCM,type="l",col=pc[1],lwd=3)
lines(time,SNCM,type="l",col=pc[2],lty=2,lwd=3)
#nc
yrange <- c(0,min(max(ENCQ75,SNCQ75),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q_t$(not censored,75p)'),cex.lab=1.6,xaxt='n' )
axis(1, at=1:4,labels=timee,font=2)
# polygon(c(time,rev(time)),c(CINC[1,],rev(CINC[2,])),col =pc[3], border = FALSE)
lines(time,ENCQ75,type="l",col=pc[1],lwd=3)
lines(time,SNCQ75,type="l",col=pc[2],lty=2,lwd=3)
# m*Beta
xrange <- range(time)
yrange <- c(0,max(Embeta,Smbeta))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$m_t\\beta_t$'),cex.lab=1.6,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
# polygon(c(time,rev(time)),c(CImbeta[1,],rev(CImbeta[2,])),col =pc[3], border = FALSE)
lines(time,Embeta,type="l",col=pc[1],lwd=3)
lines(time,Smbeta,type="l",col=pc[2],lty=2,lwd=3)
plot.new()
#qr
yrange <- c(0,min(max(EqrM,SqrM),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q^R_t(50p)$'),cex.lab=1.6,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
# polygon(c(time,rev(time)),c(CIqr[1,],rev(CIqr[2,])),col =pc[3], border = FALSE)
lines(time,EqrM,type="l",col=pc[1],lwd=3)
lines(time,SqrM,type="l",col=pc[2],lty=2,lwd=3)
#qr
yrange <- c(0,min(max(EqrQ75,SqrQ75),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q^R_t(75p)$'),cex.lab=1.6,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
# polygon(c(time,rev(time)),c(CIqr[1,],rev(CIqr[2,])),col =pc[3], border = FALSE)
lines(time,EqrQ75,type="l",col=pc[1],lwd=3)
lines(time,SqrQ75,type="l",col=pc[2],lty=2,lwd=3)
#Second Title
text(line2user(line=mean(par('mar')[c(2, 4)]), side=2),
line2user(line=2, side=3), 'Over-Identified moments', xpd=NA, cex=2, font=2)
# add an external legend
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend("bottom", legend = c("Data", "Simulation"),
col=pc, lwd=2.5, cex=2, lty=c(1,2), horiz = TRUE,xpd=TRUE,bty = 'n',inset = c(0.1,0))
dev.off()
##########################################
# counterfactual experiment: no censorship
##########################################
SzC=numeric(length=4)
SmC=numeric(length=4)
SmbetaC=numeric(length=4)
SqcC=numeric(length=4)
SqrC=numeric(length=4)
SqC=numeric(length=4)
for(i in 1:4){
SmC[i]=mt(0,p,i,max,theta)
SzC[i]=zt(0,p,i,max,theta)
SmbetaC[i]=mbetat(0,p,i,max,theta)
if(i>=2){
SqcC[i]=qcs(0,p,i,max,mu,SqcC[i-1],theta)
SqrC[i]=qrs(0,p,i,max,mu,SqrC[i-1],theta)
SqC[i]=qs(0,p,i,max,mu,SqrC[i-1],SqcC[i-1],theta)
}else{
SqcC[1]=Sqc[1]
SqC[1]=Sq[1]
SqrC[1]=Sqr[1]}}
# second graph to visualize the variables all at once
# set up something about the graph
pdf(file="dynamics.pdf", width = 10.3, height = 5)
par(mfrow=c(2,3),oma = c(3, 1, 1, 1),
mai=c(0.5,0.5,0.5,0.5),
mgp=c(2,0.3,0)) # all plots on one page
# m*Beta
xrange <- range(time)
yrange <- c(0,max(SmbetaC,Smbeta))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$m_t\\beta_t$'),cex.lab=1.6,xaxt='n')
lines(time,Smbeta,type="l",col=pc[1],lwd=2)
lines(time,SmbetaC,type="l",col=pc[2],lty=2,lwd=2)
axis(1, at=1:4,labels=timee,font=2)
# m
yrange <- c(0,max(SmC,Sm))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$m_t$'),cex.lab=1.5,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
lines(time,Sm,type="l",col=pc[1],lwd=2)
lines(time,SmC,type="l",col=pc[2],lty=2,lwd=2)
# z
yrange <- c(0,min(max(SzC,Sz),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$z_t$'),cex.lab=1.5,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
lines(time,Sz,type="l",col=pc[1],lwd=2)
lines(time,SzC,type="l",col=pc[2],lty=2,lwd=2)
#q
yrange <- c(0,min(max(SqC,Sq),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q_t$'),cex.lab=1.5,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
lines(time,Sq,type="l",col=pc[1],lwd=2)
lines(time,SqC,type="l",col=pc[2],lty=2,lwd=2)
#qr
yrange <- c(0,min(max(SqrC,Sqr),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q^R_t$'),cex.lab=1.5,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
lines(time,Sqr,type="l",col=pc[1],lwd=2)
lines(time,SqrC,type="l",col=pc[2],lty=2,lwd=2)
#qc
yrange <- c(0,min(max(SqcC,Sqc),200))
plot(xrange,yrange,type="n", xlab="Time",
ylab=TeX('$q^C_t$'),cex.lab=1.5,xaxt='n')
axis(1, at=1:4,labels=timee,font=2)
lines(time,Sqc,type="l",col=pc[1],lwd=2)
lines(time,SqcC,type="l",col=pc[2],lty=2,lwd=2)
# add an external legend
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
legend("bottom", legend = c( "Simulation",TeX('$Countertfactual:\\beta_t=0$')),
col=pc, lwd=3, cex=2,horiz = TRUE,xpd=TRUE,bty = 'n',inset = c(0.1,0))
dev.off()
#Build the tables for the paper
sink("temp.Rnw")
cat(paste('\\begin{table}[H]
\\centering % used for centering table
\\begin{tabular}{@{} l c c c @{}}
\\hline\\hline %inserts double horizontal lines
\\ External Parameters &  & Value & Target  \\\\ [0.05ex] % inserts table
%heading
\\hline % inserts single horizontal line
\\rule{0pt}{2.5ex}
Productivity of books  & $\\theta$   &',round(theta, digits=2),'& Variance of $q^R_1$  \\\\[0.15ex]
Mean quality in 1  & $\\overline{q}_1$   &',round(Sq[1], digits=2),'& First period quality  \\\\[0.15ex]
Mean rev. quality in 1  & $\\overline{q}^R_1$   &',round(Sqr[1], digits=2),'& First period quality \\\\[0.15ex]
\\hline \\hline
\\ Estimated Parameters &  & Value &  \\\\ [0.05ex] % inserts table
\\hline
\\ \\%censored revolutionary books  & $\\overline{\\beta}$   &',round(beta, digits=2),'& MSM  \\\\[0.15ex]
TFP  & $(1+\\nu)\\mu$   &',round(mu, digits=2),'& MSM  \\\\[0.15ex]
Price of compliant books   & $p$   &',round(p, digits=2),'& MSM  \\\\[0.15ex]
\\hline
\\end{tabular}
\\end{table}'))
sink()
Sweave("temp.Rnw")
